{
  "workbench.settings.editor": "json",
  // Editor settings
  "breadcrumbs.enabled": false,

  // Chat / Copilot Chat
  "chat.agentSessionsViewLocation": "showChatsMenu",
  "chat.agent.maxRequests": 50,
  "chat.mcp.autostart": "newAndOutdated",

  "editor.autoIndent": "full",
  "editor.codeLensFontFamily": "JetBrainsMono NF",
  "editor.cursorBlinking": "solid",
  "editor.cursorStyle": "line",
  "editor.cursorSurroundingLines": 4,
  "editor.cursorWidth": 3,
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.fontFamily": "Maple Mono NF, JetBrainsMono Nerd Font, Menlo, Monaco, 'Courier New', monospacere",
  "editor.fontLigatures": true,
  "editor.fontSize": 14,
  "editor.fontWeight": "600",
  "editor.inlayHints.fontFamily": "JetBrainsMono Nerd Font",
  "editor.inlayHints.fontSize": 10,
  "editor.inlayHints.padding": true,
  "editor.inlineSuggest.enabled": true,
  "editor.insertSpaces": false,
  "editor.largeFileOptimizations": false,
  "editor.letterSpacing": 0.5,
  "editor.lineNumbers": "relative",
  "editor.minimap.enabled": false,
  "editor.renderWhitespace": "all",
  "editor.suggestSelection": "first",
  "editor.tabCompletion": "on",
  "editor.tabSize": 2,
  "editor.wordSeparators": "/\\()\"':,.;<>~!@#$%^&*|+=[]{}`?-",
  "editor.wordWrap": "off",

  // Error lens
  "errorLens.enabledDiagnosticLevels": ["warning", "error"],
  "errorLens.excludeBySource": ["cSpell"],

  // Extensions / Performance
  "extensions.experimental.affinity": {
    "vscodevim.vim": 1
  },

  // Files
  "files.associations": {
    "*.css": "tailwindcss"
  },
  "files.trimTrailingWhitespace": true,

  // Git
  "git.autofetch": true,
  "git.confirmSync": false,
  "git.openRepositoryInParentFolders": "always",
  "gitlens.launchpad.indicator.enabled": false,

  // GitHub Copilot
  "github.copilot.chat.agent.thinkingTool": true,
  "github.copilot.chat.codesearch.enabled": true,
  "github.copilot.chat.commitMessageGeneration.instructions": [
    {
      "text": "Analyze staged changes and generate a conventional commit message: type(scope): description\n\nTypes: feat, fix, etc.\nFocus on WHAT and WHY."
    }
  ],
  "github.copilot.enable": {
    "*": true,
    "plaintext": false,
    "markdown": true,
    "scminput": false,
    "properties": false,
    "shellscript": false
  },
  "github.copilot.nextEditSuggestions.enabled": true,

  // JavaScript language settings
  "javascript.inlayHints.functionLikeReturnTypes.enabled": true,
  "javascript.inlayHints.parameterNames.enabled": "literals",
  "javascript.inlayHints.parameterTypes.enabled": true,
  "javascript.inlayHints.variableTypes.enabled": true,
  "javascript.updateImportsOnFileMove.enabled": "always",
  "javascript.validate.enable": false,

  // Kilo-code
  "kilo-code.allowedCommands": [
    "npm test",
    "npm install",
    "tsc",
    "git log",
    "git diff",
    "git show"
  ],

  // Material / UI
  "material-icon-theme.activeIconPack": "react_redux",

  // Terminal & Debug
  "terminal.integrated.env.linux": {},
  "terminal.integrated.fontFamily": "Maple Mono NF CN",
  "terminal.integrated.fontLigatures.enabled": true,
  "debug.console.fontFamily": "JetBrainsMono NF",

  // TypeScript language settings
  "typescript.enablePromptUseWorkspaceTsdk": true,
  "typescript.inlayHints.enumMemberValues.enabled": true,
  "typescript.inlayHints.functionLikeReturnTypes.enabled": true,
  "typescript.inlayHints.parameterNames.enabled": "literals",
  "typescript.inlayHints.variableTypes.enabled": true,
  "typescript.referencesCodeLens.enabled": true,
  "typescript.updateImportsOnFileMove.enabled": "always",

  // Vim settings
  "vim.autoindent": false,
  "vim.easymotion": true,
  "vim.handleKeys": {
    "<C-f>": false,
    "<C-c>": false,
    "<C-v>": false,
    "<C-i>": false
  },
  "vim.highlightedyank.color": "#40a02b",
  "vim.highlightedyank.duration": 250,
  "vim.highlightedyank.enable": true,
  "vim.incsearch": true,
  "vim.insertModeKeyBindings": [
    {
      "before": ["j", "j"],
      "after": ["<Esc>"]
    },
    {
      "before": ["j", "k"],
      "after": ["<Esc>"]
    },
    {
      "before": ["k", "j"],
      "after": ["<Esc>"]
    },
    {
      "before": ["k", "k"],
      "after": ["<Esc>"]
    }
  ],
  "vim.leader": "<space>",
  "vim.normalModeKeyBindingsNonRecursive": [
    // NAVIGATION
    // switch b/w buffers
    { "before": ["<S-h>"], "commands": [":bprevious"] },
    { "before": ["<S-l>"], "commands": [":bnext"] },

    // splits
    { "before": ["leader", "v"], "commands": [":vsplit"] },
    { "before": ["leader", "s"], "commands": [":split"] },

    // panes
    {
      "before": ["leader", "h"],
      "commands": ["workbench.action.focusLeftGroup"]
    },
    {
      "before": ["leader", "j"],
      "commands": ["workbench.action.focusBelowGroup"]
    },
    {
      "before": ["leader", "k"],
      "commands": ["workbench.action.focusAboveGroup"]
    },
    {
      "before": ["leader", "l"],
      "commands": ["workbench.action.focusRightGroup"]
    },
    // Explorer
    {
      "before": ["leader", "e"],
      "commands": ["workbench.action.toggleSidebarVisibility"]
    },

    // NICE TO HAVE
    { "before": ["leader", "w"], "commands": [":w!"] },
    { "before": ["leader", "q"], "commands": [":q!"] },
    { "before": ["leader", "x"], "commands": [":x!"] },
    { "before": ["<S-q>"], "commands": [":q!"] },
    {
      "before": ["leader", "q"],
      "commands": ["workbench.action.quickOpen"]
    },
    {
      "before": ["g", "h"],
      "commands": ["editor.action.showDefinitionPreviewHover"]
    },
    {
      "before": ["g", "r"],
      "commands": ["editor.action.referenceSearch.trigger"]
    },
    // Search/Git
    {
      "before": ["leader", "F"],
      "commands": ["workbench.action.findInFiles"]
    },
    {
      "commands": [
        {
          "command": "runCommands",
          "args": {
            "commands": ["workbench.view.scm", "workbench.scm.focus"]
          }
        }
      ],
      "before": ["leader", "G"]
    },

    // CODING
    {
      "before": ["<leader>", "c", "a"],
      "commands": ["editor.action.quickFix"]
    },
    {
      "before": ["<leader>", "c", "f"],
      "commands": ["editor.action.formatDocument"]
    },
    {
      "before": ["<leader>", "c", "o"],
      "commands": ["editor.action.organizeImports"]
    },
    {
      "before": ["<leader>", "c", "r"],
      "commands": ["editor.action.rename"]
    },
    {
      "before": ["<leader>", "c", "m"],
      "commands": [
        {
          "command": "editor.action.sourceAction",
          "args": {
            "apply": "first",
            "kind": "source.addMissingImports"
          }
        }
      ]
    },
    // Buffer/Editor
    {
      "before": ["leader", "b", "o"],
      "commands": ["workbench.action.closeOtherEditors"]
    },
    // Search/Git
    {
      "before": ["leader", "s", "g"],
      "commands": ["workbench.action.findInFiles"]
    },
    {
      "commands": [
        {
          "command": "runCommands",
          "args": {
            "commands": ["workbench.view.scm", "workbench.scm.focus"]
          }
        }
      ],
      "before": ["leader", "g", "g"]
    }
  ],
  "vim.sneak": true,
  "vim.smartRelativeLine": true,
  "vim.useCtrlKeys": true,
  "vim.useSystemClipboard": true,
  "vim.visualModeKeyBindings": [
    // Stay in visual mode while indenting
    { "before": ["<"], "commands": ["editor.action.outdentLines"] },
    { "before": [">"], "commands": ["editor.action.indentLines"] },
    // Move selected lines while staying in visual mode
    { "before": ["J"], "commands": ["editor.action.moveLinesDownAction"] },
    { "before": ["K"], "commands": ["editor.action.moveLinesUpAction"] },
    // toggle comment selection
    { "before": ["leader", "c"], "commands": ["editor.action.commentLine"] },
    // Smart select expand in visual mode
    {
      "before": ["<space>"],
      "commands": ["editor.action.smartSelect.expand"]
    },
    {
      "before": ["<BS>"],
      "commands": ["editor.action.smartSelect.shrink"]
    }
  ],

  // UI / Workbench
  "workbench.activityBar.location": "bottom",
  "workbench.colorCustomizations": {
    "editorCursor.foreground": "#ffc600",
    "tab.activeBorder": "#ffc600"
  },
  "workbench.colorTheme": "Kanagawa",
  "workbench.iconTheme": "catppuccin-mocha",
  "workbench.statusBar.visible": true,

  // Window
  "window.newWindowProfile": "Default"
}
