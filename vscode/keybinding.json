[
  {
    "command": "vscode.openFolder",
    "key": "ctrl+r"
  },
  // Folding
  {
    "command": "editor.fold",
    "key": "z c",
    "when": "editorTextFocus && neovim.mode == normal"
  },
  {
    "command": "editor.unfold",
    "key": "z o",
    "when": "editorTextFocus && neovim.mode == normal"
  },
  {
    "command": "editor.gotoNextFold",
    "key": "z j",
    "when": "editorTextFocus && neovim.mode == normal"
  },
  {
    "command": "editor.gotoPreviousFold",
    "key": "z k",
    "when": "editorTextFocus && neovim.mode == normal"
  },
  // Error Lens
  {
    "command": "errorLens.toggleWarning",
    "key": "alt+k shift+w"
  },
  // Toggle full screen
  {
    "command": "workbench.action.toggleMaximizedPanel",
    "key": "alt+k shift+f"
  },
  // Github Pull Request
  {
    "command": "workbench.view.extension.github-pull-requests",
    "key": "alt+k g"
  },
  // Kilo Code Ghost
  {
    "command": "kilo-code.ghost.promptCodeSuggestion",
    "key": "ctrl+q i",
    "when": "editorTextFocus && !editorTabMovesFocus && !inSnippetMode"
  },
  {
    "command": "-kilo-code.ghost.promptCodeSuggestion",
    "key": "ctrl+i",
    "when": "editorTextFocus && !editorTabMovesFocus && !inSnippetMode"
  },
  // Navigation
  {
    "command": "workbench.action.navigateLeft",
    "key": "ctrl-h"
  },
  {
    "command": "workbench.action.navigateRight",
    "key": "ctrl-l"
  },
  {
    "command": "workbench.action.navigateUp",
    "key": "ctrl-k"
  },
  {
    "command": "workbench.action.navigateDown",
    "key": "ctrl-j"
  },
  // Vim/Normal mode navigation
  {
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+j",
    "command": "list.focusDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+k",
    "command": "list.focusUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+j",
    "command": "selectNextCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "command": "editor.action.addSelectionToNextFindMatch",
    "key": "ctrl-n",
    "when": "(vim.mode == 'Visual') && (editorTextFocus || !inputFocus)"
  },
  {
    "command": "workbench.action.showAllEditors",
    "key": "space ,",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "args": {
      "commands": [
        "workbench.action.toggleSidebarVisibility",
        "workbench.files.action.focusFilesExplorer"
      ]
    },
    "command": "runCommands",
    "key": "space e",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && !sideBarFocus"
  },
  {
    "command": "workbench.action.toggleSidebarVisibility",
    "key": "space e",
    "when": "vim.mode == 'Normal' && editorTextFocus && foldersViewVisible"
  },
  // Coding
  {
    "command": "editor.action.codeAction",
    "key": "space c a",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "editor.action.rename",
    "key": "space c r",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "editor.action.organizeImports",
    "key": "space c o",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "args": {
      "apply": "first",
      "kind": "source.addMissingImports"
    },
    "command": "editor.action.sourceAction",
    "key": "space c m",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  // Buffer/Editor
  {
    "command": "workbench.action.quickOpen",
    "key": "space space",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "command": "workbench.action.closeActiveEditor",
    "key": "space b d",
    "when": "(vim.mode == 'Normal' && editorTextFocus) || !inputFocus"
  },
  {
    "command": "workbench.action.closeOtherEditors",
    "key": "space b o",
    "when": "(vim.mode == 'Normal' && editorTextFocus) || !inputFocus"
  },
  // Search/Git
  {
    "command": "workbench.action.findInFiles",
    "key": "space s g",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "args": {
      "commands": ["workbench.view.scm", "workbench.scm.focus"]
    },
    "command": "runCommands",
    "key": "space g g",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  // File Explorer
  {
    "command": "renameFile",
    "key": "r",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "filesExplorer.copy",
    "key": "c",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "filesExplorer.paste",
    "key": "p",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "filesExplorer.cut",
    "key": "x",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "deleteFile",
    "key": "d",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "explorer.newFile",
    "key": "a",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "explorer.openToSide",
    "key": "s",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "args": {
      "commands": [
        "workbench.action.splitEditorDown",
        "explorer.openAndPassFocus",
        "workbench.action.closeOtherEditors"
      ]
    },
    "command": "runCommands",
    "key": "shift-s",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "explorer.openAndPassFocus",
    "key": "enter",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceIsFolder && !inputFocus"
  },
  {
    "command": "list.toggleExpand",
    "key": "enter",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && explorerResourceIsFolder && !inputFocus"
  },
  // Debug
  {
    "command": "workbench.action.debug.selectandstart",
    "key": "space d a",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && debuggersAvailable"
  },
  {
    "command": "workbench.action.debug.stop",
    "key": "space d t",
    "when": "vim.mode == 'Normal' && editorTextFocus && inDebugMode && !focusedSessionIsAttached"
  },
  {
    "command": "workbench.action.debug.stepOver",
    "key": "space d o",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && inDebugMode && debugState == 'stopped'"
  },
  {
    "command": "editor.debug.action.toggleBreakpoint",
    "key": "space d b",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "editor.debug.action.showDebugHover",
    "key": "space d e",
    "when": "vim.mode == 'Normal' && editorTextFocus && inDebugMode && debugState == 'stopped'"
  },
  {
    "command": "workbench.action.debug.continue",
    "key": "space d c",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && inDebugMode && debugState == 'stopped'"
  }
]

